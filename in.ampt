# SETUP --------------------------------------------------------------------------------------

shell "bash -c 'rm -f dumps/part.*.dat'"

shell "mkdir -p dumps"

units           si
seed            11111
dimension       3

# outflow in +x, periodic y,z. will inject at xlo (x=0)
boundary        o p p

# domain size (m)
variable        xmin equal -1.1
variable        xmax equal 1.1
variable        ymin equal -1.1
variable 	ymax equal 1.1
variable	zmin equal -1.1
variable	zmax equal 1.1

variable	Lx equal ${xmax}-${xmin}
variable        Ly equal ${ymax}-${ymin}
variable        Lz equal ${zmax}-${zmin}

create_box      ${xmin} ${xmax} ${ymin} ${ymax} ${zmin} ${zmax}


# test case: n=3.8e20 m^-3, T=200 K, v=7.8 km/s in +x dir
variable        rho  equal 4e-5 # kg/m3
variable	nrho equal 3.8e20 # m-3
variable        T    equal 200.0 # K
variable	vx   equal 7800.0 # m/s

variable 	kB equal 1.380649e-23  # J/K
variable 	d equal 3.7e-10  # m
variable 	R equal 287.05 # (J / kg*K)
variable 	lambda equal ${kB}*${T}/(sqrt(2.0)*PI*${d}*${d}*${rho}*${R}) # m
variable	vbar equal sqrt(8*${kB}*${T}/(PI*${rho}/${nrho})) # m/s

print "MEAN FREE PATH = ${lambda} m"
print "MEAN MOLEC VEL = ${vbar} m/s"

# grid resolution

variable	dx equal ${lambda}/3 # m
variable	mct equal ${lambda}/${vbar} # s
variable	mtt equal ${dx}/${vbar} # s
variable	dt equal ((${mct}<${mtt})*${mct}+(${mct}>=${mtt})*${mtt})/3.0 # min(${mct},${mtt})/3.0

print "CELL SIZE MUST BE LESS THAN ${dx} m"
print "MEAN COLL TIME = ${mct} s"
print "MEAN TRANSIT TIME = ${mtt} s"
print "TIMESTEP MUST BE < ${dt} s" # timestep set at end of script

create_grid	500 500 50 
balance_grid    rcb part

# SURFACE GEOMETRY ----------------------------------------------------------------------------

read_surf   surf/ampt_box.surf  group ampt        # create surface group “ampt”
surf_collide wall diffuse 300.0 0.9           # define collision model “wall”
surf_modify  ampt collide wall

# SPECIES AND MIXTURE -------------------------------------------------------------------------


# use local species file
species         species/air.species N2 O2

# define inflow gas mixture named atm
mixture 	atm N2 frac 0.79
mixture		atm O2 frac 0.21
mixture         atm nrho ${nrho} vstream ${vx} 0.0 0.0 temp ${T}

# particle weighting: set target of 2e5 sim particles, calculate weighting factor
variable        Ns_target equal 200000.0
variable        Vol       equal ${Lx}*${Ly}*${Lz}
variable        fnum      equal ${nrho}*${Vol}/${Ns_target}
global          fnum ${fnum} # global bc will be queried by each new particle

# global useful for stat query later
global          nrho ${nrho}

# create an initial fill (n 0 -> auto compute # of particles from fnum and nrho)
create_particles	atm n 0

# continuous inflow; inject gas from xlo every step (fix -> run each time step, ID: "in")
fix		in emit/face atm xlo


# DIAGNOSTICS ---------------------------------------------------------------------------------


variable	diag_freq   equal 50 # dump diagnostics every _ timesteps
variable 	tstep       equal 1.0e-7 # choose small timestep << cell flight time; start 1e-7 s

	        # ID, data type, mixture, every _ steps, filename, columns
dump            p1 particle atm ${diag_freq} dumps/part.*.dat id type x y z vx vy vz

# cell-averaged (streaming+thermal) temperature
compute         Tbox temp # define a compute Tbox that calculates domain everaged temp
stats           ${diag_freq} # print diagnostics every _ timesteps
stats_style     step cpu np nattempt ncoll c_Tbox # print timestep, runtime, particles, collision stats, avg temp

timestep        ${tstep}
collide		vss atm vss/air.vss # variable soft sphere model
run             10000
