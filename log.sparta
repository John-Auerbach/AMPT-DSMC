SPARTA (20 Jan 2025)
Running on 8 MPI task(s)
# SETUP --------------------------------------------------------------------------------------

shell "bash -c 'rm -f dumps/*.dat'"

shell "mkdir -p dumps"

units           si
seed            11111
dimension       3

# outflow in +x, periodic y,z. will inject at xlo (x=0)
boundary        o p p

# domain size (m)
variable        xmin equal -1.1
variable        xmax equal 1.1
variable        ymin equal -1.1
variable 	ymax equal 1.1
variable	zmin equal -1.1
variable	zmax equal 1.1

variable	Lx equal ${xmax}-${xmin}
variable	Lx equal 1.1-${xmin}
variable	Lx equal 1.1--1.1
variable        Ly equal ${ymax}-${ymin}
variable        Ly equal 1.1-${ymin}
variable        Ly equal 1.1--1.1
variable        Lz equal ${zmax}-${zmin}
variable        Lz equal 1.1-${zmin}
variable        Lz equal 1.1--1.1

create_box      ${xmin} ${xmax} ${ymin} ${ymax} ${zmin} ${zmax}
create_box      -1.1 ${xmax} ${ymin} ${ymax} ${zmin} ${zmax}
create_box      -1.1 1.1 ${ymin} ${ymax} ${zmin} ${zmax}
create_box      -1.1 1.1 -1.1 ${ymax} ${zmin} ${zmax}
create_box      -1.1 1.1 -1.1 1.1 ${zmin} ${zmax}
create_box      -1.1 1.1 -1.1 1.1 -1.1 ${zmax}
create_box      -1.1 1.1 -1.1 1.1 -1.1 1.1
Created orthogonal box = (-1.1 -1.1 -1.1) to (1.1 1.1 1.1)

# Load atmospheric data from NRLMSIS (run: python3 tools/load_atm_data.py)
variable        rho  file data/rho.dat
variable        nrho file data/nrho.dat
variable        T    file data/T.dat
variable        vx   file data/vx.dat

print "Loaded NRLMSIS data: rho=${rho} nrho=${nrho} T=${T} vx=${vx}"
Loaded NRLMSIS data: rho=0.00001708270 nrho=35516553478260857241 T=199.67355 vx=7856.

variable 	kB equal 1.380649e-23  # J/K
variable 	d equal 3.7e-10  # m
variable 	R equal 287.05 # (J / kg*K)
variable 	lambda equal ${kB}*${T}/(sqrt(2.0)*PI*${d}*${d}*${rho}*${R}) # m
variable 	lambda equal 1.380649e-23*${T}/(sqrt(2.0)*PI*${d}*${d}*${rho}*${R}) 
variable 	lambda equal 1.380649e-23*199.67355/(sqrt(2.0)*PI*${d}*${d}*${rho}*${R}) 
variable 	lambda equal 1.380649e-23*199.67355/(sqrt(2.0)*PI*3.7e-10*${d}*${rho}*${R}) 
variable 	lambda equal 1.380649e-23*199.67355/(sqrt(2.0)*PI*3.7e-10*3.7e-10*${rho}*${R}) 
variable 	lambda equal 1.380649e-23*199.67355/(sqrt(2.0)*PI*3.7e-10*3.7e-10*0.00001708270*${R}) 
variable 	lambda equal 1.380649e-23*199.67355/(sqrt(2.0)*PI*3.7e-10*3.7e-10*0.00001708270*287.05) 
variable	vbar equal sqrt(8*${kB}*${T}/(PI*${rho}/${nrho})) # m/s
variable	vbar equal sqrt(8*1.380649e-23*${T}/(PI*${rho}/${nrho})) 
variable	vbar equal sqrt(8*1.380649e-23*199.67355/(PI*${rho}/${nrho})) 
variable	vbar equal sqrt(8*1.380649e-23*199.67355/(PI*0.00001708270/${nrho})) 
variable	vbar equal sqrt(8*1.380649e-23*199.67355/(PI*0.00001708270/35516553478260857241)) 

print "MEAN FREE PATH = ${lambda} m"
MEAN FREE PATH = 0.924318058786514 m
print "MEAN MOLEC VEL = ${vbar} m/s"
MEAN MOLEC VEL = 120.811734281083 m/s

# grid resolution

variable	dx equal ${lambda}/3 # m
variable	dx equal 0.924318058786514/3 
variable	mct equal ${lambda}/${vbar} # s
variable	mct equal 0.924318058786514/${vbar} 
variable	mct equal 0.924318058786514/120.811734281083 
variable	mtt equal ${dx}/${vbar} # s
variable	mtt equal 0.308106019595505/${vbar} 
variable	mtt equal 0.308106019595505/120.811734281083 
variable	dt equal ((${mct}<${mtt})*${mct}+(${mct}>=${mtt})*${mtt})/3.0 # min(${mct},${mtt})/3.0
variable	dt equal ((0.00765089636604319<${mtt})*${mct}+(${mct}>=${mtt})*${mtt})/3.0 
variable	dt equal ((0.00765089636604319<0.00255029878868107)*${mct}+(${mct}>=${mtt})*${mtt})/3.0 
variable	dt equal ((0.00765089636604319<0.00255029878868107)*0.00765089636604319+(${mct}>=${mtt})*${mtt})/3.0 
variable	dt equal ((0.00765089636604319<0.00255029878868107)*0.00765089636604319+(0.00765089636604319>=${mtt})*${mtt})/3.0 
variable	dt equal ((0.00765089636604319<0.00255029878868107)*0.00765089636604319+(0.00765089636604319>=0.00255029878868107)*${mtt})/3.0 
variable	dt equal ((0.00765089636604319<0.00255029878868107)*0.00765089636604319+(0.00765089636604319>=0.00255029878868107)*0.00255029878868107)/3.0 

print "CELL SIZE MUST BE LESS THAN ${dx} m"
CELL SIZE MUST BE LESS THAN 0.308106019595505 m
print "MEAN COLL TIME = ${mct} s"
MEAN COLL TIME = 0.00765089636604319 s
print "MEAN TRANSIT TIME = ${mtt} s"
MEAN TRANSIT TIME = 0.00255029878868107 s
print "TIMESTEP MUST BE < ${dt} s" # timestep set at end of script
TIMESTEP MUST BE < 0.000850099596227023 s

create_grid	120 100 100
WARNING: Per-processor grid cell memory will be large because global gridcut < 0.0 (../grid.cpp:499)
Created 1200000 child grid cells
  CPU time = 1.34844 secs
  create/ghost percent = 4.42111 95.5789
balance_grid    rcb part
WARNING: Per-processor grid cell memory will be large because global gridcut < 0.0 (../grid.cpp:499)
Balance grid migrated 1040000 cells
  CPU time = 1.35159 secs
  reassign/sort/migrate/ghost percent = 9.40434 0.643776 15.6821 74.2697

variable	diag_freq   equal 100 # dump diagnostics every _ timesteps
variable 	tstep       equal 1.0e-7 # choose small timestep << cell flight time; start 1e-7 s

# SURFACE GEOMETRY ----------------------------------------------------------------------------

read_surf	surf/ampt_box.surf  group ampt        # create surface group “ampt”
  12 triangles
  -0.5 0.5 xlo xhi
  -0.1 0.1 ylo yhi
  -0.1 0.1 zlo zhi
  0.2 min triangle edge length
  0.02 min triangle area
  2144 0 = cells overlapping surfs, overlap cells with unmarked corner pts
  142 tiny edges removed
WARNING: Per-processor grid cell memory will be large because global gridcut < 0.0 (../grid.cpp:499)
  1194400 3456 2144 = cells outside/inside/overlapping surfs
  2144 = surf cells with 1,2,etc splits
  10.608 10.608 = cell-wise and global flow volume
  CPU time = 1.2651 secs
  read/check/sort/surf2grid/ghost/inout/particle percent = 0.0840803 0.0252451 3.55159 12.7356 83.6035 7.63333 0.000545649
  surf2grid time = 0.161118 secs
  map/comm1/comm2/comm3/comm4/split percent = 49.4657 0.0420574 14.8633 3.05933 5.03446 9.54946

# SPECIES AND MIXTURE -------------------------------------------------------------------------

# use local species file
species         species/air.species N2 O2

# define inflow gas mixture named atm
mixture 	atm N2 frac 0.79
mixture		atm O2 frac 0.21
mixture     	atm nrho ${nrho} vstream ${vx} 0.0 0.0 temp ${T}
mixture     	atm nrho 35516553478260857241 vstream ${vx} 0.0 0.0 temp ${T}
mixture     	atm nrho 35516553478260857241 vstream 7856. 0.0 0.0 temp ${T}
mixture     	atm nrho 35516553478260857241 vstream 7856. 0.0 0.0 temp 199.67355

# particle weighting: set target of 2e5 sim particles, calculate weighting factor
variable        Ns_target equal 500000.0
variable        Vol       equal ${Lx}*${Ly}*${Lz}
variable        Vol       equal 2.2*${Ly}*${Lz}
variable        Vol       equal 2.2*2.2*${Lz}
variable        Vol       equal 2.2*2.2*2.2
variable        fnum      equal ${nrho}*${Vol}/${Ns_target}
variable        fnum      equal 35516553478260857241*${Vol}/${Ns_target}
variable        fnum      equal 35516553478260857241*10.648/${Ns_target}
variable        fnum      equal 35516553478260857241*10.648/500000
global          fnum ${fnum} # global bc will be queried by each new particle
global          fnum 756360522873043 

# global useful for stat query later
global          nrho ${nrho}
global          nrho 35516553478260857241

# create an initial fill (n 0 -> auto compute # of particles from fnum and nrho)
create_particles	atm n 0
Created 498121 particles
  CPU time = 0.0359796 secs

# continuous inflow; inject gas from xlo every step (fix -> run each time step, ID: "in")
fix		in emit/face atm xlo

# SURFACE COLLISIONS --------------------------------------------------------------------------

                # compute ID, type, surf group, mixture, property (energy flux on surface)
compute         compute_qwall surf ampt atm etot # etot = kinetic + internal energy. W/m^2 *multi-column array for all surface groups

                # running‑average every step so flux is never exactly zero (exponential decay)
fix             flux ave/surf ampt 1 1 1 c_compute_qwall[1] ave running  # running mean, updates each step
fix             fix_Tsurf surf/temp ampt 1 f_flux 300.0 0.9 Tsurf  # Stefan-Boltzmann


surf_collide 	wall diffuse s_Tsurf 0.9           # define collision model “wall”, random dir, use local facet temp, acc
surf_modify 	ampt collide wall # attach model to facets

# DIAGNOSTICS ---------------------------------------------------------------------------------

                # ID, data type, mixture, every _ steps, filename, columns (particle data)
dump            dump_part particle atm ${diag_freq} dumps/part.*.dat id type x y z vx vy vz
dump            dump_part particle atm 100 dumps/part.*.dat id type x y z vx vy vz

                # ID, type, region, mixture, property (gas temperature per grid cell)
compute         compute_Tgrid grid all atm temp # *per-grid array
                # ID, data type, region, every _ steps, filename, columns (cell coords and gas temperature)
dump 		dump_grid grid all ${diag_freq} dumps/grid.*.dat id xlo ylo zlo xc yc zc c_compute_Tgrid[*] # compute for all columns (gases) in array
dump 		dump_grid grid all 100 dumps/grid.*.dat id xlo ylo zlo xc yc zc c_compute_Tgrid[*] 

		# ID, data type, region, every _ steps, filename, columns (facet id, triangle vertices, surface temperature)
dump    	dump_surf surf ampt ${diag_freq} dumps/surf.*.dat id v1x v1y v1z v2x v2y v2z v3x v3y v3z f_flux[*] s_Tsurf
dump    	dump_surf surf ampt 100 dumps/surf.*.dat id v1x v1y v1z v2x v2y v2z v3x v3y v3z f_flux[*] s_Tsurf

# cell-averaged (streaming+thermal) temperature
compute         Tbox temp # define a compute Tbox that calculates domain everaged temp
stats           ${diag_freq} # print diagnostics every _ timesteps
stats           100 
stats_style     step cpu np nattempt ncoll c_Tbox # print timestep, runtime, particles, collision stats, avg temp

timestep        ${tstep}
timestep        1e-07
collide		    vss atm vss/air.vss # variable soft sphere model
run             10000
Memory usage per proc in Mbytes:
  particles (ave,min,max) = 6.75 6.75 6.75
  grid      (ave,min,max) = 147.389 147.389 147.389
  surf      (ave,min,max) = 0.00151062 0.00151062 0.00151062
  total     (ave,min,max) = 156.429 156.429 156.429
Step CPU Np Natt Ncoll c_Tbox 
       0            0   498121        0        0    71541.786 
     100    3.6225535   498235        0        0    71519.894 
     200    7.2077983   497947        3        3    71495.256 
     300    10.617931   497937        3        2    71474.011 
     400    14.114273   498088        7        5    71450.995 
     500    17.565767   498274        6        4    71430.387 
     600    21.233725   498192       14       12    71411.463 
     700     24.75188   498284       16       11    71392.356 
     800    28.993183   498384       24       15    71369.969 
     900    32.932193   498296       27       15    71345.664 
    1000    36.444052   498614       33       21    71327.649 
    1100    39.822129   498996       26       16    71306.403 
    1200    43.308823   498889       33       24    71287.373 
    1300    46.700739   498926       36       18     71264.92 
    1400    50.162466   498963       49       30    71240.962 
    1500    53.600871   499071       49       35      71218.5 
    1600    57.219436   498606       51       33    71195.053 
    1700    61.066347   498893       89       65    71171.463 
    1800    65.344645   499153      102       79    71147.783 
    1900    68.650767   499257       90       55    71128.712 
    2000    72.201724   499353      127       90    71103.227 
    2100    75.673715   499445      120       85    71083.505 
    2200    79.063179   499629      143      110     71062.21 
    2300    82.510872   499924      165      129    71041.323 
    2400    86.026303   500161      192      144    71018.985 
    2500    89.402804   500304      203      161      70997.2 
    2600    92.959872   500369      269      216    70976.119 
    2700    96.301043   500254      271      214     70954.08 
    2800    99.910008   500439      305      233    70930.794 
    2900    103.16884   500453      315      261    70903.043 
    3000    106.57886   500870      375      293     70878.91 
    3100    109.93558   500967      355      287    70852.313 
    3200    113.34066   501345      377      299    70824.449 
    3300     116.7932   501569      412      322    70800.137 
    3400    120.33865   501813      473      383    70770.086 
    3500     123.6574   502136      467      378    70741.061 
    3600    127.20031   502385      460      376    70714.592 
    3700    130.53148   502859      443      355     70684.98 
    3800    134.13114   502849      482      399    70654.813 
    3900    137.45057   502887      473      380    70624.959 
    4000    140.81675   503338      473      382    70592.641 
    4100    144.48551   503572      477      388    70560.716 
    4200    148.14354   503985      474      395     70532.06 
    4300    151.75104   504482      467      375    70506.229 
    4400    155.47632   504864      472      383    70473.972 
    4500    159.05169   505464      445      352    70445.224 
    4600    162.62344   505703      439      341    70416.604 
    4700    165.96869   506188      428      339      70391.6 
    4800    169.55693   506606      395      314    70369.137 
    4900    172.98351   506971      392      310    70344.421 
    5000    176.36988   507056      390      301    70321.659 
    5100    179.88785   507469      453      350    70299.025 
    5200    183.47334   507875      389      295    70281.648 
    5300    186.96289   508289      417      314    70263.964 
    5400     190.5705   508661      382      290    70248.663 
    5500    193.98354   508912      362      282    70231.625 
    5600     197.6115   508898      385      290    70213.897 
    5700    201.05614   509282      395      297    70198.089 
    5800    204.49004   509548      379      266    70181.103 
    5900    208.03755   509773      393      316     70171.91 
    6000    211.57122   509919      413      297    70163.644 
    6100    215.03789   510276      423      324    70155.872 
    6200    218.66071   510227      360      273    70154.513 
    6300    222.06603   510109      376      296     70150.76 
    6400    225.64459   510053      406      295    70147.442 
    6500    229.00733   510232      406      314    70148.605 
    6600    232.69059   510098      408      301    70148.112 
    6700      236.166   510129      451      336    70143.226 
    6800    239.63102   510261      399      304    70144.666 
    6900     243.2103   510412      378      283    70142.575 
    7000    246.74109   510387      440      329    70138.466 
    7100    250.26085   509968      424      312    70135.734 
    7200    253.88212   509961      469      364    70134.849 
    7300    257.32267   509744      481      359    70131.794 
    7400    260.99539   509697      459      356    70137.638 
    7500     264.4276   509417      459      353    70132.834 
    7600    268.21049   509501      461      331      70135.2 
    7700    271.87662   509469      471      347    70137.465 
    7800    275.48561   509464      464      329    70137.919 
    7900    279.06475   509542      426      320    70136.861 
    8000    282.57173   509641      443      328    70138.133 
    8100    286.11901   509659      461      344    70130.087 
    8200    289.76849   509982      448      336    70127.421 
    8300     293.3039   509795      497      359    70124.832 
    8400     297.0913   509954      466      339    70129.366 
    8500    300.50975   509837      469      344    70137.095 
    8600    304.28697   510039      472      343    70133.564 
    8700    307.95647   510250      438      318    70135.284 
    8800    311.64692   510055      491      361    70136.512 
    8900    315.38102   509816      450      329    70127.619 
    9000    318.88657   510120      479      353    70134.924 
    9100    322.47793   510128      422      304    70139.571 
    9200    326.03978   510356      473      342    70132.957 
    9300    329.55042   510369      480      331    70133.792 
    9400    333.23227   510333      473      343    70140.653 
    9500     336.6332   510405      433      308    70139.276 
    9600    340.33793   510166      481      338     70138.13 
    9700    343.82921   510255      450      332    70139.111 
    9800    347.47673   510485      467      329    70136.417 
    9900    351.05842   510497      472      329    70136.395 
   10000    354.55603   510661      440      319    70138.471 
Loop time of 354.556 on 8 procs for 10000 steps with 510661 particles

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Move    | 91.873     | 92.928     | 94.113     |   8.5 | 26.21
Coll    | 43.727     | 44.266     | 45.459     |   9.4 | 12.48
Sort    | 131.23     | 132.46     | 133.39     |   5.6 | 37.36
Comm    | 7.4277     | 8.0454     | 8.4825     |  13.8 |  2.27
Modify  | 11.523     | 13.717     | 15.454     |  35.6 |  3.87
Output  | 63.122     | 63.123     | 63.126     |   0.0 | 17.80
Other   |            | 0.01221    |            |       |  0.00

Particle moves    = 5055456871 (5.06B)
Cells touched     = 5279113114 (5.28B)
Particle comms    = 2017749 (2.02M)
Boundary collides = 0 (0K)
Boundary exits    = 1772526 (1.77M)
SurfColl checks   = 13901946 (13.9M)
SurfColl occurs   = 41328 (41.3K)
Surf reactions    = 0 (0K)
Collide attempts  = 3372902 (3.37M)
Collide occurs    = 2558243 (2.56M)
Reactions         = 0 (0K)
Particles stuck   = 0
Axisymm bad moves = 0

Particle-moves/CPUsec/proc: 1.78232e+06
Particle-moves/step: 505546
Cell-touches/particle/step: 1.04424
Particle comm iterations/step: 1
Particle fraction communicated: 0.000399123
Particle fraction colliding with boundary: 0
Particle fraction exiting boundary: 0.000350616
Surface-checks/particle/step: 0.00274989
Surface-collisions/particle/step: 8.17493e-06
Surf-reactions/particle/step: 0
Collision-attempts/particle/step: 0.00066718
Collisions/particle/step: 0.000506036
Reactions/particle/step: 0

Particles: 63832.6 ave 64061 max 63591 min
Histogram: 1 0 1 1 1 0 2 0 1 1
Cells:      150000 ave 150000 max 150000 min
Histogram: 8 0 0 0 0 0 0 0 0 0
GhostCell: 1.05e+06 ave 1.05e+06 max 1.05e+06 min
Histogram: 8 0 0 0 0 0 0 0 0 0
EmptyCell: 0 ave 0 max 0 min
Histogram: 8 0 0 0 0 0 0 0 0 0
Surfs:    12 ave 12 max 12 min
Histogram: 8 0 0 0 0 0 0 0 0 0
GhostSurf: 0 ave 0 max 0 min
Histogram: 8 0 0 0 0 0 0 0 0 0

shell "rm -f data/rho.dat data/nrho.dat data/T.dat data/vx.dat"
