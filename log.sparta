SPARTA (20 Jan 2025)
Running on 1 MPI task(s)
# SETUP --------------------------------------------------------------------------------------

shell "bash -c 'rm -f dumps/part.*.dat'"

shell "mkdir -p dumps"

units           si
seed            11111
dimension       3

# outflow in +x, periodic y,z. will inject at xlo (x=0)
boundary        o p p

# domain size (m)
variable        xmin equal -1.1
variable        xmax equal 1.1
variable        ymin equal -1.1
variable 	ymax equal 1.1
variable	zmin equal -1.1
variable	zmax equal 1.1

variable	Lx equal ${xmax}-${xmin}
variable	Lx equal 1.1-${xmin}
variable	Lx equal 1.1--1.1
variable        Ly equal ${ymax}-${ymin}
variable        Ly equal 1.1-${ymin}
variable        Ly equal 1.1--1.1
variable        Lz equal ${zmax}-${zmin}
variable        Lz equal 1.1-${zmin}
variable        Lz equal 1.1--1.1

create_box      ${xmin} ${xmax} ${ymin} ${ymax} ${zmin} ${zmax}
create_box      -1.1 ${xmax} ${ymin} ${ymax} ${zmin} ${zmax}
create_box      -1.1 1.1 ${ymin} ${ymax} ${zmin} ${zmax}
create_box      -1.1 1.1 -1.1 ${ymax} ${zmin} ${zmax}
create_box      -1.1 1.1 -1.1 1.1 ${zmin} ${zmax}
create_box      -1.1 1.1 -1.1 1.1 -1.1 ${zmax}
create_box      -1.1 1.1 -1.1 1.1 -1.1 1.1
Created orthogonal box = (-1.1 -1.1 -1.1) to (1.1 1.1 1.1)


# test case: n=3.8e20 m^-3, T=200 K, v=7.8 km/s in +x dir
variable        rho  equal 4e-5 # kg/m3
variable	nrho equal 3.8e20 # m-3
variable        T    equal 200.0 # K
variable	vx   equal 7800.0 # m/s

variable 	kB equal 1.380649e-23  # J/K
variable 	d equal 3.7e-10  # m
variable 	R equal 287.05 # (J / kg*K)
variable 	lambda equal ${kB}*${T}/(sqrt(2.0)*PI*${d}*${d}*${rho}*${R}) # m
variable 	lambda equal 1.380649e-23*${T}/(sqrt(2.0)*PI*${d}*${d}*${rho}*${R}) 
variable 	lambda equal 1.380649e-23*200/(sqrt(2.0)*PI*${d}*${d}*${rho}*${R}) 
variable 	lambda equal 1.380649e-23*200/(sqrt(2.0)*PI*3.7e-10*${d}*${rho}*${R}) 
variable 	lambda equal 1.380649e-23*200/(sqrt(2.0)*PI*3.7e-10*3.7e-10*${rho}*${R}) 
variable 	lambda equal 1.380649e-23*200/(sqrt(2.0)*PI*3.7e-10*3.7e-10*4e-05*${R}) 
variable 	lambda equal 1.380649e-23*200/(sqrt(2.0)*PI*3.7e-10*3.7e-10*4e-05*287.05) 
variable	vbar equal sqrt(8*${kB}*${T}/(PI*${rho}/${nrho})) # m/s
variable	vbar equal sqrt(8*1.380649e-23*${T}/(PI*${rho}/${nrho})) 
variable	vbar equal sqrt(8*1.380649e-23*200/(PI*${rho}/${nrho})) 
variable	vbar equal sqrt(8*1.380649e-23*200/(PI*4e-05/${nrho})) 
variable	vbar equal sqrt(8*1.380649e-23*200/(PI*4e-05/3.8e+20)) 

print "MEAN FREE PATH = ${lambda} m"
MEAN FREE PATH = 0.395391580478045 m
print "MEAN MOLEC VEL = ${vbar} m/s"
MEAN MOLEC VEL = 258.457118995713 m/s

# grid resolution

variable	dx equal ${lambda}/3 # m
variable	dx equal 0.395391580478045/3 
variable	mct equal ${lambda}/${vbar} # s
variable	mct equal 0.395391580478045/${vbar} 
variable	mct equal 0.395391580478045/258.457118995713 
variable	mtt equal ${dx}/${vbar} # s
variable	mtt equal 0.131797193492682/${vbar} 
variable	mtt equal 0.131797193492682/258.457118995713 
variable	dt equal ((${mct}<${mtt})*${mct}+(${mct}>=${mtt})*${mtt})/3.0 # min(${mct},${mtt})/3.0
variable	dt equal ((0.00152981501153622<${mtt})*${mct}+(${mct}>=${mtt})*${mtt})/3.0 
variable	dt equal ((0.00152981501153622<0.000509938337178741)*${mct}+(${mct}>=${mtt})*${mtt})/3.0 
variable	dt equal ((0.00152981501153622<0.000509938337178741)*0.00152981501153622+(${mct}>=${mtt})*${mtt})/3.0 
variable	dt equal ((0.00152981501153622<0.000509938337178741)*0.00152981501153622+(0.00152981501153622>=${mtt})*${mtt})/3.0 
variable	dt equal ((0.00152981501153622<0.000509938337178741)*0.00152981501153622+(0.00152981501153622>=0.000509938337178741)*${mtt})/3.0 
variable	dt equal ((0.00152981501153622<0.000509938337178741)*0.00152981501153622+(0.00152981501153622>=0.000509938337178741)*0.000509938337178741)/3.0 

print "CELL SIZE MUST BE LESS THAN ${dx} m"
CELL SIZE MUST BE LESS THAN 0.131797193492682 m
print "MEAN COLL TIME = ${mct} s"
MEAN COLL TIME = 0.00152981501153622 s
print "MEAN TRANSIT TIME = ${mtt} s"
MEAN TRANSIT TIME = 0.000509938337178741 s
print "TIMESTEP MUST BE < $